from aiogram import types, Dispatcher
from create_bot import bot
from aiogram.dispatcher.filters import Text
from database.sqlite_db import db


waiting_for_message = []

def is_int(text):
    try:
        val = int(text)
        return True
    except ValueError:
        return False

async def start_command(message: types.Message):
    user = message.from_user.id
    users = []
    for m in db.get_users():
        users.append(m[0])
    if user not in users:
        db.add_user(user_id=message.from_user.id, nickname=message.from_user.username)
        await bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! üëã\n–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –æ–Ω–ª–∞–π–Ω –≤–µ–±–∏–Ω–∞—Ä.')
        await bot.send_message(message.from_user.id, '–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?')

async def send_notif(message: types.Message):
    admins = []
    for user in db.get_admins():
        admins.append(user[0])
    if message.from_user.id in admins:
        db.set_waiting(message.from_user.id, 1)
        await bot.send_message(message.from_user.id, '–ü—Ä–∏—à–ª–∏ —Ç–µ–∫—Å—Ç –æ–ø–æ–≤–µ—â–µ–Ω–∏—è')

async def no_type_message(message: types.Message):
    # –ü—Ä–∏–∑–≤–∞–∏–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π user –∑–Ω–∞—á–µ–Ω–∏–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–∞ —É–¥–æ–±—Å—Ç–≤–∞ –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏
    user = message.from_user.id
    users = []
    for m in db.get_users():
        users.append(m[0])

    admins = []
    for admin in db.get_admins():
        admins.append(admin[0])
    if user in admins:
        if db.get_waiting(user)[0] == 1:
            db.set_waiting(user, 0)
            for bot_user in users:
                await bot.send_message(bot_user, message.text)
            await bot.send_message(user, '–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–æ—Å–ª–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º!')

    if user in users and db.get_name(user)[0] == None:
        db.set_name(user, message.text)
        await bot.send_message(message.from_user.id, '–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! –ü–æ–¥—Å–∫–∞–∂–∏, —Å–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?')
    elif user in users and db.get_name(user)[0] != None and db.get_age(user)[0] == None:
        if is_int(message.text):
            db.set_age(user, int(message.text))
            await bot.send_message(message.from_user.id, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!')
            await bot.send_message(message.from_user.id, 'https://t.me/+n4Vp4UpZJgs4ZDAy')
        else:
            await bot.send_message(message.from_user.id, '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª. –ü—Ä–∏—à–ª–∏ –º–Ω–µ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç —á–∏—Å–ª–æ–º.')
    


def register_client_handlers(dp: Dispatcher):
    dp.register_message_handler(start_command, commands=['start'])
    dp.register_message_handler(send_notif, commands=['send'])
    dp.register_message_handler(no_type_message, content_types=['text'])